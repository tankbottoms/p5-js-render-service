version: "3.9"

networks:
  p5js_render_network:

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:

services:
  p5js_render_app:
    build: .
    container_name: p5js_render_app
    environment:
      - INFURA_IPFS_API_KEY=${INFURA_IPFS_API_KEY}
      - INFURA_IPFS_API_KEY_SECRET=${INFURA_IPFS_API_KEY_SECRET}
    # ports:
    #   - 8080:8080
    restart: always
    networks:
      - p5js_render_network
    volumes:
      - ${TMP_DIR}:/data
      - ./logs:/app/logs

  p5js_render_cloudflare_tunnel:
    container_name: p5js_render_cloudflare_tunnel
    image: cloudflare/cloudflared:2023.4.1
    restart: unless-stopped
    environment:
      - TUNNEL_TOKEN=$TUNNEL_TOKEN
    command: tunnel --no-autoupdate --url http://p5js_render_app:8080 run
    networks:
      - p5js_render_network

  p5js_render_netdata:
    image: netdata/netdata:edge
    container_name: p5js_render_netdata
    pid: host
    network_mode: host
    hostname: ${NETDATA_HOSTNAME}
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN}
      - NETDATA_CLAIM_ROOMS=${NETDATA_CLAIM_ROOMS}
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
